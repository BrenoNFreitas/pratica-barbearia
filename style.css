body{
	font-family: 'Montserrat', sans-serif;
}

header {
	background: #BBBBBB;
	padding: 20px 0;
}

.caixa {
	position: relative;
	width: 940px;
	margin: 0 auto;
}

nav {
	position: absolute;
	top: 110px;
	right: 0;
}

nav li {
	display: inline;
	margin: 0 0 0 15px;
}

nav a {
	text-transform: uppercase;
	color: #000000;
	font-weight: bold;
	font-size: 22px;
	text-decoration: none;
}

nav a:hover {
	color: #C78C19;
	text-decoration: underline;
}

.produtos {
	width: 940px;
	margin: 0 auto;
	padding: 50px 0;
}

.produtos li {
	display: inline-block;
	text-align: center;
	width: 30%;
	vertical-align: top;
	margin: 0 1.5%;
	padding: 30px 20px;
	box-sizing: border-box;
	border: 2px solid #000000;
	border-radius: 10px;
}

.produtos li:hover {
	border-color: #C78C19;
}

.produtos li:active {
	border-color: #088C19;	
}

.produtos li:hover h2 {
	font-size: 34px;
}

.produtos h2 {
	font-size: 30px;
	font-weight: bold;
}

.produto-descricao {
	font-size: 18px;
}

.produto-preco {
	font-size: 22px;
	font-weight: bold;
	margin-top: 10px;
}

footer {
	text-align: center;
	background: url("bg.jpg");
	padding: 40px 0;
}

.copyright {
	color: #FFFFFF;
	font-size: 13px;
	margin: 20px 0 0;
}

main {
	/*width: 940px;
	margin: 0 auto;*/
}

form {
	margin: 40px 0;
}

form label, form legend {
	display:block;
	font-size: 20px;
	margin: 0 0 10px;
}

.input-padrao {
	display: block;
	margin: 0 0 20px;
	padding: 10px 25px;
	width: 50%;
}

.checkbox {
	margin: 20px 0;
}

.enviar {
	width:40%;
	padding: 15px 0;
	background: orange;
	color: white;
	font-weight: bold;
	font-size: 18px;
	border: none;
	border-radius: 5px;
	transition: 1s all;
	cursor: pointer;
}

.enviar:hover {
	background: darkorange;
	transform: scale(1.2);
}

table {
	margin: 20px 0 40px;
}

thead {
	background: #555555;
	color: white;
	font-weight: bold;
}

td, th {
	border: 1px solid #000000;
	padding: 8px 15px;
}

/*css da página inicial*/
.banner{
	width: 100%;
}

/*
Com CSS 3, podemos utilizar mais uma camada - a de opacidade, chamada 
alfa - nas cores em RGB. Para tanto, utilizamos o rgbae então definir 
os valores que quisermos. ex: color: rgb(0,0,0,0.3);
*/

.titulo-principal {
    text-align: center;
    font-size: 2em; /* "em" = sempre o dobro do tamanho base da font.*/
    margin: 0 0 1em;
    clear: left;
    color: rgb(0,0,0,);
}

.principal p{
	margin: 0 0 1em;
}

.principal strong{
	font-weight: bold;
}

.principal em{
	font-size: italic;
}

.utensilios{
	width: 120px;
	float: left;
	margin: 0 20px 20px 0;
}

.beneficios {
    padding: 3em 0;
    background: #888888;
}

.conteudo-beneficios {
    width: 640px;
    margin: 0 auto;
}

.lista-beneficios {
    width: 40%;
    display: inline-block;
    vertical-align: top;
}

.itens {
    line-height: 1.5;
}

.itens:first-child {
    font-weight: bold;
}

/* A sombra é resultado de um efeito de "luz" que lançaremos sobre o elemento. 
O nome da propriedade que utilizaremos para gerar esse efeito é box-shadow, 
que possui a propriedade do eixo X, T e uma cor. Queremos deslocar 10px no 
eixo X e Y, a cor que utilizaremos será preto.
ex: box-shadow: 10px 10px #000000; 

Podemos melhorar a qualidade estética dessa sombra ao adicionarmos uma terceira 
propriedade chamada blur, em que podemos aplicar um nível de desfoque específico, 
no caso, inseriremos um valor de 5px. Quanto maior a quantidade de pixels que 
inserirmos, mais claro sera o efeito de desfoque. 
ex: box-shadow: 10px 10px 5px #000000;

Temos ainda uma quarta propriedade que configura a intensidade da borda a partir 
do tamanho do elemento, isto é, o tamanho da sombra projetada. Neste caso, 
inseriremos 20px:
ex: box-shadow: 10px 10px 5px 20px #000000;*/

.imagem-beneficios {
    width: 60%;
    opacity: 1;
    transition: 400ms;
    box-shadow: 10px 10px 10px 0 #000000;
}

.imagem-beneficios:hover {
    opacity: 0.6;
}

.mapa {
    padding: 3em 0;
}

.mapa p {
    margin: 0 0 2em;
    text-align: center;
}

.mapa-conteudo {
    width: 940px;
    margin: 0 auto;
}

.principal {
    padding: 3em 0;
    background: #FEFEFE;
    width: 940px;
    margin: 0 auto;
}

.mapa {
    padding: 3em 0;
    background: linear-gradient(#FEFEFE, #888888);
}

.itens:before {
    content: "★";
}

.video {
    width: 560px;
    margin: 2em auto;
}

/*Perguntaremos ao navegador qual é o tamanho da tela em questão e, se for 
aquele que desejamos, entregaremos o estilo correto.

Para realizar isso, utilizaremos o @media, com o valor do tipo de tela screen 
e a pesquisa. Todas as telas que tenham até 450, terão esse estilo diferente, 
reescrito. Para exempliciar, colocaremos no background um estilo da cor vermelha.
*/

@media screen and (max-width: 480px) {
    /*Primeiramente nos atentaremos para o cabeçalho, que possui 940px de altura. 
    Se inserirmos uma altura automática, o posicionamento dos elementos que compõe 
    a sessão se deforma, portanto essa não é uma boa saída para solucionar a questão. 
    Em style.css mudaremos a altura da caixa para auto. Quando elaboramos layouts 
    responsivos, precisamos trabalhar exclusivamente no elemento que será modificado.

	Faremos o mesmo procedimento para principal, conteudo-beneficios, mapa-conteudo 
	e video.*/
	.caixa, .principal, .conteudo-beneficios, .mapa-conteudo, .video {
        width: auto;
    }

    h1 {
    	text-align: center;
	}

	nav {
    	position:static;
	}

	.lista-beneficios, imagem-beneficios {
    	width: 100%
	}

	.produtos{
        width: auto;
        padding: 0;
    }
    .produtos li{
        display: block;
        width: 90%;
        margin: 0 auto;
        margin-top: 1rem;
    }
}












/*Com os seletores avançados do CSS,podemos selecionar os filhos diretos de <main>, 
para tanto, utilizaremos o sinal >, e todo os outros parágrafos serão ignorados, 
afinal são filhos diretos da <section> e não de <main>.

main > p {
    background: red; 
}

Mas como selecionar o primeiro parágrafo que sucede uma imagem, por exemplo? 
Conseguimos selecionar o primeiro filho com o seletor que acabamos de conhecer, 
mas neste caso estamos falando do primeiro irmão que vem depois de um elemento.

Neste caso, usamos img como elemento âncora e para o primeiro irmão usamos o 
sinal de "+"

img + p { 
    balckground: blue;
}

Para selecionar todos os parágrafos localizados depois de uma imagem usamos o 
seletor ~

img ~ p {
    background: yellow
} 

No CSS podemos, inclusive, excluir itens específicos. Se quisermos excluir 
todos os parágrafos que não compõe missao, escreveremos:

.principal p:not(#misssao) {
    background: orange;
}
*/